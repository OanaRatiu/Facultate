model aspects_neglected_in_OCL

context A
    def testIfA:

		let a:A = A.allInstances->select(oclIsTypeOf(A))->any(true)
        let b:B = B.allInstances->any(true)
        let c:C = C.allInstances->any(true)
        let d:D = D.allInstances->any(true)
               
        let o1:Integer = (if self.a1 then d else a endif).o2()
              
        let o2():Integer = 0

context B
    
    def testIfB:
        

		let o2:Integer = a2*a2
/*
context D
    
    def:
        let o2():Integer = a2
*/
context C
    
    def testIfC:
    
        let o2:Integer = 5*a2

/*      
    inv forbidenCast:
    	self.oclAsType(B).a3
*/
context A

	inv workingWithUndefined_1:
	    
    		Set{1, 3, undefined}->asBag = Bag{1, 3, undefined}
    	
    inv workingWithUndefined_2: 

    		Set{1, 3, undefined}->count(1) = 1
        
    inv workingWithUndefined_3: 

        	Set{1, 3, undefined}->size = 3  
/*        
	inv workingWithUndefined_4: 

        	Set{1, 3, undefined}->sum = 4  
*/		

endmodel