
/*
 * @(#)Cofetarie.java
 *
 * Generated by <a href="http://lci.cs.ubbcluj.ro/ocle/>OCLE 2.0</a>
 * using <a href="http://jakarta.apache.org/velocity/">
 * Velocity Template Engine 1.3rc1</a>
 */
import java.util.Iterator;
import java.util.LinkedHashSet;
import java.util.Set;
import ro.ubbcluj.lci.codegen.framework.dt.Integer;
import ro.ubbcluj.lci.codegen.framework.ocl.BasicConstraintChecker;
import ro.ubbcluj.lci.codegen.framework.ocl.BasicUtilities;
import ro.ubbcluj.lci.codegen.framework.ocl.CollectionUtilities;
import ro.ubbcluj.lci.codegen.framework.ocl.Ocl;

/**
 *
 * @author unascribed
 */
public class Cofetarie {

    
    public final Set getPrajituri() {

        if (prajituri == null) {
            return java.util.Collections.EMPTY_SET;
        }
        return java.util.Collections.unmodifiableSet(prajituri);
    }
    
    public final void addPrajituri(Prajitura arg) {

        if (arg != null) {
            if (prajituri == null) {
                prajituri = new LinkedHashSet();
            }
            prajituri.add(arg);
        }

    }
    
    public final void removePrajituri(Prajitura arg) {

        if (prajituri != null && arg != null) {
            prajituri.remove(arg);
        }

    }
    
    public Set prajituriScumpe() {

        Set setPrajituri = Cofetarie.this.getPrajituri();
        //evaluate 'select(p|p.getPret>25)':
        Set setSelect = CollectionUtilities.newSet();
        final Iterator iter = setPrajituri.iterator();
        while (iter.hasNext()) {
            final Prajitura p = (Prajitura)iter.next();
            int ngetPret = p.getPret();
            boolean bGreater = ngetPret > 25;
            
            if (bGreater) CollectionUtilities.add(setSelect, p);
        }
        return setSelect;

    }
    
    public Cofetarie() {

    }
    
    public class ConstraintChecker extends BasicConstraintChecker {

        
        public void checkConstraints() {

            super.checkConstraints();
            check_Cofetarie_denumire();

        }
        
        public void check_Cofetarie_denumire() {

            String strDenumire = Cofetarie.this.denumire;
            int nSize = BasicUtilities.size(strDenumire);
            boolean bIsUndefined = Ocl.isUndefined(Integer.toInteger(nSize));
            boolean bNot = !bIsUndefined;
            if (!bNot) {
                System.err.println("invariant 'denumire' failed for object "+Cofetarie.this);
            }

        }

    }
    
    public Set prajituri;
    
    private String denumire;
    
    private String adresa;

}
