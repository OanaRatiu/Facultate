
/*
 * @(#)Decedat.java
 *
 * Generated by <a href="http://lci.cs.ubbcluj.ro/ocle/>OCLE 2.0</a>
 * using <a href="http://jakarta.apache.org/velocity/">
 * Velocity Template Engine 1.3rc1</a>
 */
import java.util.Iterator;
import java.util.List;
import java.util.Set;
import ro.ubbcluj.lci.codegen.framework.dt.Integer;
import ro.ubbcluj.lci.codegen.framework.ocl.BasicConstraintChecker;
import ro.ubbcluj.lci.codegen.framework.ocl.CollectionUtilities;
import ro.ubbcluj.lci.codegen.framework.ocl.Ocl;
import ro.ubbcluj.lci.codegen.framework.ocl.OclType;

/**
 *
 * @author unascribed
 */
public class Decedat
{

    
    public final Mormant getMormant()
    {

        return mormant;
    }
    
    public final void setMormant(Mormant arg)
    {

        if (mormant != arg)
        {
            Mormant temp = mormant;
            mormant = null;//to avoid infinite recursions
            if (temp != null)
            {
                temp.removeDecedati(this);
            }
            if (arg != null)
            {
                mormant = arg;
                arg.addDecedati(this);
            }
        }

    }
    
    public String getNume()
    {

        String strNume = Decedat.this.nume;
        return strNume;

    }
    
    public String getPrenume()
    {

        String strPrenume = Decedat.this.prenume;
        return strPrenume;

    }
    
    public Decedat()
    {

    }
    
    public class ConstraintChecker extends BasicConstraintChecker
    {

        
        public void checkConstraints()
        {

            super.checkConstraints();
            check_Decedat_invariant();
            check_Decedat_invariant0();
            check_Decedat_invariant1();

        }
        
        public void check_Decedat_invariant()
        {

            int nIdDecedat = Decedat.this.idDecedat;
            boolean bIsDefined = Ocl.isDefined(Integer.toInteger(nIdDecedat));
            int nIdDecedat0 = Decedat.this.idDecedat;
            boolean bGreater = nIdDecedat0 > 0;
            boolean bAnd = bIsDefined && bGreater;
            if (!bAnd)
            {
                System.err.println("invariant 'invariant' failed for object "+Decedat.this);
            }

        }
        
        public void check_Decedat_invariant0()
        {

        Set setAllInstances = Ocl.getType(new Class[]{Decedat.class}).allInstances();
            //evaluate 'collect(idDecedat)':
            List bagCollect = CollectionUtilities.newBag();
            final Iterator iter = setAllInstances.iterator();
            while (iter.hasNext())
            {
                final Decedat decl = (Decedat)iter.next();
                int nIdDecedat = decl.idDecedat;
                
                bagCollect.add(Integer.toInteger(nIdDecedat));
            }
            bagCollect = CollectionUtilities.flatten(bagCollect);
            
            //evaluate 'isUnique(n|n)':
            Set uniquenessValidator = CollectionUtilities.newSet();
            boolean bIsUnique = true;
            final Iterator iter0 = bagCollect.iterator();
            while (bIsUnique && iter0.hasNext())
            {
                final int n = ((Integer)iter0.next()).asInteger();
                
                bIsUnique = uniquenessValidator.add(Integer.toInteger(n));
            }
            if (!bIsUnique)
            {
                System.err.println("invariant 'invariant0' failed for object "+Decedat.this);
            }

        }
        
        public void check_Decedat_invariant1()
        {

            String strNume = Decedat.this.nume;
            boolean bNotEquals = !strNume.equals("");
            String strPrenume = Decedat.this.prenume;
            boolean bNotEquals0 = !strPrenume.equals("");
            boolean bAnd = bNotEquals && bNotEquals0;
            if (!bAnd)
            {
                System.err.println("invariant 'invariant1' failed for object "+Decedat.this);
            }

        }

    }
    
    public int idDecedat;
    
    public String nume;
    
    public String prenume;
    
    public Mormant mormant;
    {

        OclType.registerInstance(this, Decedat.class);

    }

}
